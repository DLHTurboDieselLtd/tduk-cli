name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Install pytest, pytest-bdd, Black, and flake8
        run: pip install pytest pytest-bdd black flake8
      - name: Run Black checks
        run: black --check .
      - name: Run flake8 checks
        run: flake8 .
      - name: Run tests for onboard feature
        run: pytest tests/test_onboard.py --capture=no -v
      - name: Run tests for help feature
        run: pytest tests/test_help.py --capture=no -v

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install Poetry
        run: pip install poetry
      - name: Configure Poetry
        run: |
          poetry config --list
          poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_TOKEN }}
          poetry config repositories.testpypi https://test.pypi.org/legacy/
      - name: Build package
        run: poetry build
      - name: Publish package
        run: poetry publish -r testpypi
